@import "../styles/base.scss";

:root {
  --color-gray: #8c97b7;
  --color-blue: #1c38f1;
  --color-green: #1fcdb0;
  --input-height: 3rem;
  --transition-duration: 0.3s;
  --transition-easing: cubic-bezier(0.5, 0, 0.5, 1);
  --animation-duration: 0.8s;
}
body {
  display: flex;
  justify-content: center;
  align-items: center;
  background-color: #f9fbff;
}

.ball {
  width: 50px;
  height: 50px;
  border-radius: 100%;
  background-color: red;

  // the round ball pulsates, inifnitely
  animation-name: pulse;
  animation-duration: 2s;
  animation-iteration-count: infinite;
  animation-direction: alternate-reverse;
}

// when we hover over the ball, the animation stops
// but it can be a bit abrupt. We want to "pause" the animation rather than stop it completely and bring it back to its initial state

.ball:hover {
  // animation: none;
  animation-play-state: paused;
}

.ui-form {
  background: #fff;
  box-shadow: 0 0.5rem 1rem #0003;
  padding: 1rem;
  border-radius: 0.25rem;
  display: grid;
  grid-template-columns: 1fr auto;
  grid-template-rows: 1fr;
  grid-column-gap: 1rem;
  grid-template-areas: "input button";

  animation-name: slide-up;
  animation-duration: 1s;
  animation-timing-function: ease-in-out;

  // Add an animation here

  --color: var(--color-gray);
  &:focus-within {
    --color: var(--color-blue);
  }

  > .ui-input,
  > .ui-button {
    // Add an animation here
  }
}

.ui-input {
  grid-area: input;
  padding: 0 1rem;
  height: var(--input-height);
  border: 2px solid var(--color);
  border-radius: 0.25rem;
  outline: none;
  transition: inherit;

  &:invalid:not(:focus) {
    animation: shake-me;
    animation-duration: 0.2s;
    animation-timing-function: linear;
  }
}

// BUTTON
.ui-button {
  grid-area: button;
  border: none;
  padding: 0 1rem;
  color: white;
  font-weight: bold;
  border-radius: 0.25rem;
  height: var(--input-height);
  background-color: var(--color);
  transition: inherit;
}

// .ui-button:hover {
//   animation: shake-me 0.1s alternate-reverse;
//   animation-iteration-count: 4;
// }

[data-show]:not([data-active]) {
  display: none;
}

.ui-form {
  overflow: hidden;
}

// keyframes

@keyframes pulse {
  from {
    transform: scale(1);
  }
  to {
    transform: scale(2);
  }
}

@keyframes slide-up {
  0% {
    opacity: 0;
    transform: translateY(100%);
  }

  // let's say we want the form to be full opacity by the time it reaches up. We'll add 50% in this case
  50% {
    opacity: 1;
  }
  100% {
    // opacity: 1;
    transform: none;
  }
}

@keyframes shake-me {
  0% {
    transform: translateX(-5px);
  }
  100% {
    transform: translateX(5px);
  }
}
